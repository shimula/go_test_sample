# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html


build:

  services:
   - id: mysql:5.5
     name: mysql55
     env:
       MYSQL_ROOT_PASSWORD: rootpassword
       MYSQL_USER: testuser
       MYSQL_PASSWORD: password
       MYSQL_DATABASE: test
   - id: mysql:5.6
     name: mysql56
     env:
       MYSQL_ROOT_PASSWORD: rootpassword
       MYSQL_USER: testuser
       MYSQL_PASSWORD: password
       MYSQL_DATABASE: test

  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree

    - wercker/setup-go-workspace:
        package-dir: github.com/shimula/go_test_sample

    - install-packages:
        packages: mysql-client

    - script:
        name: print env
        code: env

    - script:
        name: load initial data
        code: |
          mysql -u${MYSQL55_ENV_MYSQL_USER} -p${MYSQL55_ENV_MYSQL_PASSWORD} -P${MYSQL55_PORT_3306_TCP_PORT} -h${MYSQL55_PORT_3306_TCP_ADDR} < test_data/init.sql
          mysql -u${MYSQL56_ENV_MYSQL_USER} -p${MYSQL56_ENV_MYSQL_PASSWORD} -P${MYSQL56_PORT_3306_TCP_PORT} -h${MYSQL56_PORT_3306_TCP_ADDR} < test_data/init.sql

    - script:
        name: glide install
        code: |
          go get github.com/Masterminds/glide
          glide i

    # Build the project
    - script:
        name: go build 1
        code: |
          go build -o $WERCKER_OUTPUT_DIR/echo_main1 echo_main.go

    # Build the project
    - script:
        name: go build 2
        code: |
          go build -o $WERCKER_OUTPUT_DIR/echo_main2 echo_main2.go

    # Test the project
    - script:
       name: go test for mysql 5.5
       code: |
         MYSQL_USER=${MYSQL55_ENV_MYSQL_USER} \
         MYSQL_PASSWORD=${MYSQL55_ENV_MYSQL_PASSWORD} \
         MYSQL_HOST=${MYSQL55_PORT_3306_TCP_ADDR} \
         MYSQL_PORT=${MYSQL55_PORT_3306_TCP_PORT} \
         go test ./handler

    - script:
       name: go test for mysql 5.6
       code: |
         MYSQL_USER=${MYSQL56_ENV_MYSQL_USER} \
         MYSQL_PASSWORD=${MYSQL56_ENV_MYSQL_PASSWORD} \
         MYSQL_HOST=${MYSQL56_PORT_3306_TCP_ADDR} \
         MYSQL_PORT=${MYSQL56_PORT_3306_TCP_PORT} \
         go test ./handler

deploy:
  steps:

    - install-packages:
        packages: file tree

    - script:
       name: set version
       code: export APP_VERSION=$(cat version)

    - script:
        name: print env
        code: |
          env
          pwd
          tree $WERCKER_OUTPUT_DIR
          tree $WERCKER_CACHE_DIR
          tree $WERCKER_SOURCE_DIR

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $APP_VERSION
        owner: shimula
        repo: go_test_sample

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: go_test_sample
        owner: shimula
        repo: go_test_sample